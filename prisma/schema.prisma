generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    imageUrl     String?
    firstName    String?
    lastName     String?
    emailAddress String  @unique
    credits      Int     @default(150)

    userToProjects UserToProject[]
    questionAsked  Question[]
}

model Project {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name      String
    githubUrl String

    deletedAt DateTime?

    userToProjects       UserToProject[]
    commits              Commit[]
    sourceCodeEmbeddings SourceCodeEmbedding[]
    savedQuestions       Question[]
}

model UserToProject {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    project   Project @relation(fields: [projectId], references: [id])
    projectId String

    user   User   @relation(fields: [userId], references: [id])
    userId String

    @@unique([userId, projectId])
}

model SourceCodeEmbedding {
    id               String                      @id @default(cuid())
    summaryEmbedding Unsupported("vector(768)")?
    sourceCode       String
    fileName         String
    summary          String

    project   Project @relation(fields: [projectId], references: [id])
    projectId String
}

model Question {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    question String
    answer   String

    filesReferences Json?

    project   Project @relation(fields: [projectId], references: [id])
    projectId String

    user   User   @relation(fields: [userId], references: [id])
    userId String
}

model Commit {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    project   Project @relation(fields: [projectId], references: [id])
    projectId String

    commitMessage      String
    commitHash         String
    commitAuthorName   String
    commitAuthorAvatar String
    commitDate         DateTime

    summary String
}
